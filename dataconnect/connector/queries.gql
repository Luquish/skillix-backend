# ==================== USER QUERIES ====================
query GetUserByFirebaseUid($firebaseUid: String!) @auth(level: USER) {
  user(where: { firebaseUid: { eq: $firebaseUid } }) {
    id
    email
    name
    isActive
    authProvider
    platform
    firebaseUid
    createdAt
    updatedAt
    preferences {
      id
      skill
      experienceLevel
      motivation
      availableTimeMinutes
      learningStyle
      goal
    }
    learningPlan {
      id
      generatedBy
      generatedAt
    }
  }
}

query GetUserById($userId: ID!) @auth(level: USER) {
  user(where: { id: { eq: $userId } }) {
    id
    email
    name
    isActive
    authProvider
    platform
    createdAt
    updatedAt
    preferences {
      id
      skill
      experienceLevel
      motivation
      availableTimeMinutes
      learningStyle
      goal
    }
  }
}

# ==================== LEARNING PLAN QUERIES ====================
query GetUserLearningPlan($userId: ID!) @auth(level: USER) {
  learningPlan(where: { userId: { eq: $userId } }) {
    id
    generatedBy
    generatedAt
    skillAnalysis {
      id
      skill
      skillCategory
      marketDemand
      components {
        id
        name
        description
        importance
      }
      prerequisites {
        id
        name
        description
        isRequired
      }
      careerPaths {
        id
        title
        description
        averageSalary
        demandLevel
      }
    }
    pedagogicalAnalysis {
      id
      cognitivLoadAssessment
      objectives {
        id
        objective
        measurable
        timeframe
      }
      bloomsLevels {
        level
        percentage
      }
      engagementTechniques {
        id
        name
        description
        frequency
      }
      assessmentMethods {
        id
        type
        description
        frequency
      }
    }
    sections {
      id
      title
      description
      order
      days {
        id
        dayNumber
        title
        focusArea
        isActionDay
        completionStatus
        completedAt
      }
    }
  }
}

query GetPlanSectionWithDays($sectionId: ID!) @auth(level: USER) {
  planSection(where: { id: { eq: $sectionId } }) {
    id
    title
    description
    order
    days {
      id
      dayNumber
      title
      focusArea
      isActionDay
      completionStatus
      objectives {
        id
        objective
        order
      }
      blocks {
        id
        blockType
        title
        xp
        order
        estimatedMinutes
      }
    }
  }
}

# ==================== CONTENT QUERIES ====================
query GetDayContent($dayContentId: ID!) @auth(level: USER) {
  dayContent(where: { id: { eq: $dayContentId } }) {
    id
    dayNumber
    title
    focusArea
    isActionDay
    completionStatus
    generatedBy
    generatedAt
    objectives {
      id
      objective
      order
    }
    blocks {
      id
      blockType
      title
      xp
      order
      estimatedMinutes
      audioContent {
        id
        audioUrl
        transcript
        duration
        voiceType
      }
      readContent {
        id
        content
        estimatedReadTime
        keyConcepts {
          id
          concept
          definition
          order
        }
      }
      quizContent {
        id
        questions {
          id
          question
          correctAnswer
          explanation
          order
          options {
            id
            optionText
            isCorrect
            order
          }
        }
      }
      actionTask {
        id
        taskType
        description
        instructions
        estimatedTime
        steps {
          id
          instruction
          order
        }
        deliverables {
          id
          description
          type
          order
        }
      }
    }
  }
}

query GetContentBlock($blockId: ID!) @auth(level: USER) {
  contentBlock(where: { id: { eq: $blockId } }) {
    id
    blockType
    title
    xp
    order
    estimatedMinutes
    dayContent {
      id
      dayNumber
      title
    }
    audioContent {
      id
      audioUrl
      transcript
      duration
      voiceType
    }
    readContent {
      id
      content
      estimatedReadTime
      keyConcepts {
        concept
        definition
      }
    }
    quizContent {
      id
      questions {
        id
        question
        correctAnswer
        explanation
        options {
          id
          optionText
          isCorrect
        }
      }
    }
    actionTask {
      id
      taskType
      description
      instructions
      estimatedTime
      steps {
        instruction
      }
      deliverables {
        description
        type
      }
    }
  }
}

# ==================== ENROLLMENT & PROGRESS QUERIES ====================
query GetUserEnrollment($userId: ID!) @auth(level: USER) {
  enrollment(where: { userId: { eq: $userId } }) {
    id
    status
    startedAt
    completedAt
    lastActivityAt
    currentDayNumber
    totalXpEarned
    learningPlan {
      id
      sections {
        id
        title
        order
        days {
          id
          dayNumber
          title
          completionStatus
        }
      }
    }
  }
}

query GetUserProgress($userId: ID!) @auth(level: USER) {
  contentProgress(
    where: { userId: { eq: $userId } }
    orderBy: { createdAt: DESC }
  ) {
    id
    completed
    xpEarned
    attempts
    timeSpent
    score
    completedAt
    contentBlock {
      id
      blockType
      title
      dayContent {
        id
        dayNumber
        title
        section {
          id
          title
        }
      }
    }
    responses {
      id
      isCorrect
      question {
        id
        question
      }
      selectedOption {
        id
        optionText
      }
    }
  }
}

query GetDayProgress($userId: ID!, $dayContentId: ID!) @auth(level: USER) {
  contentProgress(
    where: {
      AND: [
        { userId: { eq: $userId } }
        { contentBlock: { dayContentId: { eq: $dayContentId } } }
      ]
    }
  ) {
    id
    completed
    xpEarned
    timeSpent
    contentBlock {
      id
      blockType
      title
      order
    }
  }
}

# ==================== ANALYTICS QUERIES ====================
query GetUserAnalytics($userId: ID!, $startDate: Date!, $endDate: Date!) @auth(level: USER) {
  userAnalytics(
    where: {
      AND: [
        { userId: { eq: $userId } }
        { date: { gte: $startDate } }
        { date: { lte: $endDate } }
      ]
    }
    orderBy: { date: ASC }
  ) {
    id
    date
    totalXp
    sessionsCount
    averageSessionTime
    blocksCompleted
    quizAvgScore
    currentStreak
    longestStreak
    preferredLearningTime
    engagementScore
    churnRisk
  }
}

query GetLatestUserAnalytics($userId: ID!) @auth(level: USER) {
  userAnalytics(
    where: { userId: { eq: $userId } }
    orderBy: { date: DESC }
    limit: 1
  ) {
    id
    date
    totalXp
    currentStreak
    engagementScore
    churnRisk
    preferredLearningTime
  }
}

# ==================== ADK SESSION QUERIES ====================
query GetAdkSession($sessionId: String!) @auth(level: USER) {
  adkSession(where: { sessionId: { eq: $sessionId } }) {
    id
    appName
    lastUpdateTime
    state {
      id
      currentContext
      userLevel
      lastTopics
      preferences
    }
    messages(orderBy: { createdAt: ASC }) {
      id
      role
      content
      createdAt
    }
  }
}

query GetUserAdkSessions($userId: ID!) @auth(level: USER) {
  adkSessions(
    where: { userId: { eq: $userId } }
    orderBy: { lastUpdateTime: DESC }
  ) {
    id
    appName
    sessionId
    lastUpdateTime
  }
} 