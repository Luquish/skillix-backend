# --- User & Profile Mutations ---

mutation CreateUser(
  $firebaseUid: String!, $email: String!, $name: String, $authProvider: String!,
  $platform: String, $photoUrl: String, $emailVerified: Boolean, $appleUserIdentifier: String
) @auth(level: NO_ACCESS) {
  # CORRECCIÃ“N: Se revierte a los nombres de campo en camelCase, ya que el generador del SDK
  # espera los nombres de campo del esquema GQL, no los nombres de columna de la BD.
  user_insert(data: {
    firebaseUid: $firebaseUid, 
    email: $email,
    name: $name, 
    authProvider: $authProvider,
    platform: $platform,
    photoUrl: $photoUrl, 
    emailVerified: $emailVerified,
    appleUserIdentifier: $appleUserIdentifier
  })
}

# --- Learning Plan & Content Mutations (Granular) ---

mutation CreateLearningPlanBase(
  $userFirebaseUid: String!, $skillName: String!, $generatedBy: String!, $generatedAt: Timestamp!,
  $totalDurationWeeks: Int!, $dailyTimeMinutes: Int!, $skillLevelTarget: String!,
  $milestones: [String!]!, $progressMetrics: [String!]!, $flexibilityOptions: [String!]
) @auth(level: NO_ACCESS) {
  learningPlan_insert(data: {
    userFirebaseUid: $userFirebaseUid, skillName: $skillName, generatedBy: $generatedBy, generatedAt: $generatedAt,
    totalDurationWeeks: $totalDurationWeeks, dailyTimeMinutes: $dailyTimeMinutes, 
    skillLevelTarget: $skillLevelTarget,
    milestones: $milestones, progressMetrics: $progressMetrics, flexibilityOptions: $flexibilityOptions
  })
}

mutation CreatePlanSection(
  $learningPlanId: UUID!, $title: String!, $description: String, $order: Int!
) @auth(level: NO_ACCESS) {
  planSection_insert(data: {
    learningPlanId: $learningPlanId, title: $title, description: $description, order: $order
  })
}

mutation CreateDayContent(
  $sectionId: UUID!, $dayNumber: Int!, $title: String!, $focusArea: String!,
  $isActionDay: Boolean!, $objectives: [String!]!, $completionStatus: String
) @auth(level: NO_ACCESS) {
  dayContent_insert(data: {
    sectionId: $sectionId, dayNumber: $dayNumber, title: $title, focusArea: $focusArea,
    isActionDay: $isActionDay, objectives: $objectives, 
    completionStatus: $completionStatus
  })
}

mutation CreateMainContentItem(
  $dayContentId: UUID!, $title: String!, $textContent: String!, $funFact: String!, $xp: Int!
) @auth(level: NO_ACCESS) {
  mainContentItem_insert(data: {
    dayContentId: $dayContentId, title: $title, textContent: $textContent, funFact: $funFact, xp: $xp
  })
}

mutation CreateKeyConcept(
  $mainContentItemId: UUID!, $concept: String!, $explanation: String!
) @auth(level: NO_ACCESS) {
  keyConcept_insert(data: {
    mainContentItemId: $mainContentItemId, concept: $concept, explanation: $explanation
  })
}

mutation CreateActionTaskItem(
  $dayContentId: UUID!, $title: String!, $challengeDescription: String!, $timeEstimateString: String!,
  $tips: [String!]!, $realWorldContext: String!, $successCriteria: [String!]!, $toviMotivation: String!,
  $difficultyAdaptation: String, $xp: Int!
) @auth(level: NO_ACCESS) {
  actionTaskItem_insert(data: {
    dayContentId: $dayContentId, title: $title, challengeDescription: $challengeDescription,
    timeEstimateString: $timeEstimateString, tips: $tips, realWorldContext: $realWorldContext,
    successCriteria: $successCriteria, toviMotivation: $toviMotivation,
    difficultyAdaptation: $difficultyAdaptation, xp: $xp
  })
}

mutation CreateActionStepItem(
  $actionTaskItemId: UUID!, $stepNumber: Int!, $description: String!, $estimatedTimeSeconds: Int!
) @auth(level: NO_ACCESS) {
  actionStepItem_insert(data: {
    actionTaskItemId: $actionTaskItemId, stepNumber: $stepNumber,
    description: $description, estimatedTimeSeconds: $estimatedTimeSeconds
  })
}

mutation CreateContentBlockItem(
  $dayContentId: UUID!, $blockType: String!, $title: String!, $xp: Int!, $order: Int!,
  $estimatedMinutes: Int, $quizDetailsId: UUID, $exerciseDetailsId: UUID
) @auth(level: NO_ACCESS) {
  contentBlockItem_insert(data: {
    dayContentId: $dayContentId, 
    blockType: $blockType, 
    title: $title, xp: $xp, order: $order,
    estimatedMinutes: $estimatedMinutes, quizDetailsId: $quizDetailsId, exerciseDetailsId: $exerciseDetailsId
  })
}

mutation CreateQuizDetails($description: String!) @auth(level: NO_ACCESS) {
  quizContentDetails_insert(data: { description: $description })
}

mutation CreateQuizQuestion(
  $quizDetailsId: UUID!, $question: String!, $questionType: String!, $explanation: String
) @auth(level: NO_ACCESS) {
  quizQuestionData_insert(data: {
    quizDetailsId: $quizDetailsId, question: $question,
    questionType: $questionType, 
    explanation: $explanation
  })
}

mutation CreateQuizOption($questionId: UUID!, $optionText: String!, $isCorrect: Boolean!) @auth(level: NO_ACCESS) {
  quizOptionData_insert(data: {
    questionId: $questionId, optionText: $optionText, isCorrect: $isCorrect
  })
}

# --- Other Mutations ---
mutation CreateEnrollment($learningPlanId: UUID!, $status: String!) @auth(level: USER) {
  enrollment_insert(data: {
      userFirebaseUid_expr: "auth.uid",
      learningPlanId: $learningPlanId,
      status: $status
  })
}

mutation UpdateDayCompletionStatus($dayContentId: UUID!, $status: String!) @auth(level: USER) {
  dayContent_update(
    key: { id: $dayContentId },
    data: { completionStatus: $status }
  )
}
