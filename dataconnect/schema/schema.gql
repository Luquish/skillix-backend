# --- Tipos de Tabla Principales ---

"""
Representa un usuario de la plataforma Skillix.
"""
type User @table(name: "users", key: "firebaseUid") {
  firebaseUid: String! @col(name: "firebase_uid")
  email: String! @unique
  name: String
  # CORRECCIÃ“N: Se reemplazan los Enums personalizados por String.
  authProvider: String! @col(name: "auth_provider")
  platform: String @col(name: "platform")
  photoUrl: String @col(name: "photo_url")
  emailVerified: Boolean @col(name: "email_verified")
  fcmTokens: [String!] @col(name: "fcm_tokens")
  lastSignInAt: Timestamp @col(name: "last_sign_in_at")
  isActive: Boolean @default(expr: "true") @col(name: "is_active")
  appleUserIdentifier: String @col(name: "apple_user_identifier")
  isDeleted: Boolean @default(expr: "false") @col(name: "is_deleted")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type UserPreference @table(name: "user_preferences") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @unique @col(name: "user_firebase_uid")
  skill: String!
  experienceLevel: String! @col(name: "experience_level")
  motivation: String!
  availableTimeMinutes: Int! @col(name: "available_time_minutes")
  goal: String!
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type LearningPlan @table(name: "learning_plans") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @col(name: "user_firebase_uid")
  skillName: String! @col(name: "skill_name")
  generatedBy: String! @col(name: "generated_by")
  generatedAt: Timestamp! @col(name: "generated_at")
  totalDurationWeeks: Int! @col(name: "total_duration_weeks")
  dailyTimeMinutes: Int! @col(name: "daily_time_minutes")
  skillLevelTarget: String! @col(name: "skill_level_target")
  milestones: [String!]!
  progressMetrics: [String!]! @col(name: "progress_metrics")
  flexibilityOptions: [String!] @col(name: "flexibility_options")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type PlanSection @table(name: "plan_sections") {
  id: UUID! @default(expr: "uuidV4()")
  learningPlan: LearningPlan!
  learningPlanId: UUID! @col(name: "learning_plan_id")
  title: String!
  description: String
  order: Int!
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type DayContent @table(name: "day_contents") {
  id: UUID! @default(expr: "uuidV4()")
  section: PlanSection!
  sectionId: UUID! @col(name: "section_id")
  dayNumber: Int! @col(name: "day_number")
  title: String!
  focusArea: String! @col(name: "focus_area")
  isActionDay: Boolean! @col(name: "is_action_day")
  objectives: [String!]!
  generatedBy: String @col(name: "generated_by")
  generatedAt: Timestamp @col(name: "generated_at")
  completionStatus: String @default(expr: "'PENDING'") @col(name: "completion_status")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type MainContentItem @table(name: "main_content_items") {
  id: UUID! @default(expr: "uuidV4()")
  dayContent: DayContent!
  dayContentId: UUID! @unique @col(name: "day_content_id")
  title: String!
  textContent: String! @col(name: "text_content")
  audioUrl: String @col(name: "audio_url")
  estimatedReadTimeMinutes: Int @col(name: "estimated_read_time_minutes")
  audioDurationSeconds: Int @col(name: "audio_duration_seconds")
  funFact: String! @col(name: "fun_fact")
  xp: Int!
}

type ActionTaskItem @table(name: "action_task_items") {
  id: UUID! @default(expr: "uuidV4()")
  dayContent: DayContent!
  dayContentId: UUID! @unique @col(name: "day_content_id")
  title: String!
  challengeDescription: String! @col(name: "challenge_description")
  timeEstimateString: String! @col(name: "time_estimate_string")
  tips: [String!]!
  realWorldContext: String! @col(name: "real_world_context")
  successCriteria: [String!]! @col(name: "success_criteria")
  toviMotivation: String! @col(name: "tovi_motivation")
  difficultyAdaptation: String @col(name: "difficulty_adaptation")
  xp: Int!
}

type ContentBlockItem @table(name: "content_block_items") {
  id: UUID! @default(expr: "uuidV4()")
  dayContent: DayContent!
  dayContentId: UUID! @col(name: "day_content_id")
  blockType: String! @col(name: "block_type")
  title: String!
  xp: Int!
  order: Int!
  estimatedMinutes: Int @col(name: "estimated_minutes")
  quizDetails: QuizContentDetails
  quizDetailsId: UUID @col(name: "quiz_details_id")
  exerciseDetails: ExerciseDetailsData
  exerciseDetailsId: UUID @col(name: "exercise_details_id")
}

type UserAnalytics @table(name: "user_analytics") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @unique @col(name: "user_firebase_uid")
  optimalLearningTimeStart: String @col(name: "optimal_learning_time_start")
  optimalLearningTimeEnd: String @col(name: "optimal_learning_time_end")
  optimalLearningTimeReasoning: String @col(name: "optimal_learning_time_reasoning")
  contentDifficultyRecommendation: String @col(name: "content_difficulty_recommendation")
  idealSessionLengthMinutes: Int @col(name: "ideal_session_length_minutes")
  streakRiskLevel: String @col(name: "streak_risk_level")
  streakInterventionStrategies: [String!] @col(name: "streak_intervention_strategies")
  overallEngagementScore: Float @col(name: "overall_engagement_score")
  keyInsights: [String!] @col(name: "key_insights")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type SkillAnalysis @table(name: "skill_analyses") {
  id: UUID! @default(expr: "uuidV4()")
  learningPlan: LearningPlan!
  learningPlanId: UUID! @unique @col(name: "learning_plan_id")
  skillCategory: String! @col(name: "skill_category")
  marketDemand: String! @col(name: "market_demand")
  learningPathRecommendation: String! @col(name: "learning_path_recommendation")
  realWorldApplications: [String!]! @col(name: "real_world_applications")
  complementarySkills: [String!]! @col(name: "complementary_skills")
  isSkillValid: Boolean! @col(name: "is_skill_valid")
  viabilityReason: String @col(name: "viability_reason")
  generatedBy: String! @col(name: "generated_by")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type PedagogicalAnalysis @table(name: "pedagogical_analyses") {
  id: UUID! @default(expr: "uuidV4()")
  learningPlan: LearningPlan!
  learningPlanId: UUID! @unique @col(name: "learning_plan_id")
  effectivenessScore: Float! @col(name: "effectiveness_score")
  cognitiveLoadAssessment: String! @col(name: "cognitive_load_assessment")
  scaffoldingQuality: String! @col(name: "scaffolding_quality")
  engagementPotential: Float! @col(name: "engagement_potential")
  recommendations: [String!]!
  assessmentStrategies: [String!]! @col(name: "assessment_strategies")
  improvementAreas: [String!]! @col(name: "improvement_areas")
  generatedBy: String! @col(name: "generated_by")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type Notification @table(name: "notifications") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @col(name: "user_firebase_uid")
  message: String!
  type: String
  isRead: Boolean! @default(expr: "false") @col(name: "is_read")
  scheduledTime: Timestamp @col(name: "scheduled_time")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type StreakData @table(name: "streak_data", key: "userFirebaseUid") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @col(name: "user_firebase_uid")
  currentStreak: Int! @default(expr: "0") @col(name: "current_streak")
  longestStreak: Int! @default(expr: "0") @col(name: "longest_streak")
  lastContributionDate: Date @col(name: "last_contribution_date")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type Tovi @table(name: "tovis") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @unique @col(name: "user_firebase_uid")
  name: String!
  personality: String!
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type ToviMessage @table(name: "tovi_messages") {
  id: UUID! @default(expr: "uuidV4()")
  tovi: Tovi!
  toviId: UUID! @col(name: "tovi_id")
  user: User!
  userFirebaseUid: String! @col(name: "user_firebase_uid")
  situation: String
  message: String!
  isFromTovi: Boolean! @col(name: "is_from_tovi")
  isFirstMessage: Boolean! @col(name: "is_first_message")
  isDelivered: Boolean! @default(expr: "false") @col(name: "is_delivered")
  isRead: Boolean! @default(expr: "false") @col(name: "is_read")
  toviEmojiStyle: String! @col(name: "tovi_emoji_style")
  animationSuggestion: String! @col(name: "animation_suggestion")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type ChatSession @table(name: "chat_sessions") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @col(name: "user_firebase_uid")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type ChatMessage @table(name: "chat_messages") {
  id: UUID! @default(expr: "uuidV4()")
  chatSession: ChatSession!
  chatSessionId: UUID! @col(name: "chat_session_id")
  userFirebaseUid: String! @col(name: "user_firebase_uid")
  role: String! @col(name: "role")
  content: String!
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

type Enrollment @table(name: "enrollments") {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  userFirebaseUid: String! @col(name: "user_firebase_uid")
  learningPlan: LearningPlan!
  learningPlanId: UUID! @col(name: "learning_plan_id")
  enrollmentDate: Timestamp @col(name: "enrollment_date")
  status: String! @col(name: "status")
  createdAt: Timestamp @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp @default(expr: "request.time") @col(name: "updated_at")
}

# --- Tipos de Tabla (Anidados / Relacionados) ---

type LearningPlanDailyActivityTemplate @table(name: "learning_plan_daily_activity_templates") {
  id: UUID! @default(expr: "uuidV4()")
  learningPlan: LearningPlan!
  learningPlanId: UUID! @col(name: "learning_plan_id")
  activityType: String! @col(name: "activity_type")
  description: String!
}

type LearningPlanResource @table(name: "learning_plan_resources") {
  id: UUID! @default(expr: "uuidV4()")
  learningPlan: LearningPlan!
  learningPlanId: UUID! @col(name: "learning_plan_id")
  title: String!
  url: String!
  resourceType: String! @col(name: "resource_type")
}

type KeyConcept @table(name: "key_concepts") {
  id: UUID! @default(expr: "uuidV4()")
  mainContentItem: MainContentItem!
  mainContentItemId: UUID! @col(name: "main_content_item_id")
  concept: String!
  explanation: String!
  emoji: String
}

type ActionStepItem @table(name: "action_step_items") {
  id: UUID! @default(expr: "uuidV4()")
  actionTaskItem: ActionTaskItem!
  actionTaskItemId: UUID! @col(name: "action_task_item_id")
  stepNumber: Int! @col(name: "step_number")
  description: String!
  estimatedTimeSeconds: Int! @col(name: "estimated_time_seconds")
  isCompleted: Boolean! @default(expr: "false") @col(name: "is_completed")
}

type QuizContentDetails @table(name: "quiz_content_details") {
  id: UUID! @default(expr: "uuidV4()")
  description: String!
}

type QuizQuestionData @table(name: "quiz_question_data") {
  id: UUID! @default(expr: "uuidV4()")
  quizDetails: QuizContentDetails!
  quizDetailsId: UUID! @col(name: "quiz_details_id")
  question: String!
  questionType: String! @col(name: "question_type")
  explanation: String
}

type QuizOptionData @table(name: "quiz_option_data") {
  id: UUID! @default(expr: "uuidV4()")
  question: QuizQuestionData!
  questionId: UUID! @col(name: "question_id")
  optionText: String! @col(name: "option_text")
  isCorrect: Boolean! @col(name: "is_correct")
}

type ExerciseDetailsData @table(name: "exercise_details_data") {
  id: UUID! @default(expr: "uuidV4()")
  instructions: String!
  exerciseType: String! @col(name: "exercise_type")
}

type MatchPair @table(name: "match_pairs") {
  id: UUID! @default(expr: "uuidV4()")
  exercise: ExerciseDetailsData!
  exerciseId: UUID! @col(name: "exercise_id")
  prompt: String!
  correctAnswer: String! @col(name: "correct_answer")
}

type SkillComponentData @table(name: "skill_component_data") {
  id: UUID! @default(expr: "uuidV4()")
  skillAnalysis: SkillAnalysis!
  skillAnalysisId: UUID! @col(name: "skill_analysis_id")
  name: String!
  description: String!
  difficultyLevel: String! @col(name: "difficulty_level")
  prerequisitesText: [String!]! @col(name: "prerequisites_text")
  estimatedLearningHours: Int! @col(name: "estimated_learning_hours")
  practicalApplications: [String!]! @col(name: "practical_applications")
  order: Int!
}

type LearningObjectiveData @table(name: "learning_objective_data") {
  id: UUID! @default(expr: "uuidV4()")
  pedagogicalAnalysis: PedagogicalAnalysis!
  pedagogicalAnalysisId: UUID! @col(name: "pedagogical_analysis_id")
  objective: String!
  measurable: Boolean!
  timeframe: String!
  order: Int!
}
