type User @table {
  id: ID! @id @default(expr: "uuid_generate_v4()")
  email: String! @unique
  name: String!
  isActive: Boolean! @default(value: true)
  authProvider: AuthProvider!
  platform: Platform
  firebaseUid: String @unique
  
  # OAuth fields
  photoUrl: String
  emailVerified: Boolean! @default(value: false)
  
  # Auth provider specific
  appleUserIdentifier: String @unique
  appleIdentityToken: String
  googleIdToken: String
  googleAccessToken: String
  
  # Metadata
  lastSignInAt: Timestamp
  createdAt: Timestamp! @default(expr: "now()")
  updatedAt: Timestamp! @default(expr: "now()")

  # Relaciones
  preferences: [UserPreference!]! @hasMany
  enrollments: [Enrollment!]! @hasMany
  learningPlan: LearningPlan @hasOne
}

type UserPreference @table {
  id: ID! @id @default(expr: "uuid_generate_v4()")
  userId: ID! @foreignKey(references: "User.id")
  skill: String!
  experienceLevel: UserExperienceLevel!
  motivation: String!
  availableTimeMinutes: Int!
  learningStyle: LearningStyle!
  goal: String!
  createdAt: Timestamp! @default(expr: "now()")
  updatedAt: Timestamp! @default(expr: "now()")

  # Relaciones
  user: User! @belongsTo
} 